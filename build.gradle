

plugins {
    id 'net.researchgate.release' version '2.3.5'
}


group = 'fuzzy-csv'


apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'groovy'


// Using a setter method
project.buildDir = 'target'

description = """"""

sourceCompatibility = 1.6
targetCompatibility = 1.6


release {
    failOnUnversionedFiles = false
}

repositories {
    // First check local cache before accessing central repository
    // mavenRepo name:'Local', urls: "file://" + System.properties['user.home'] + "/.m2/repository"
    mavenLocal()
    mavenCentral()

    maven { url "https://omnitech.co.ug/m2/releases" }
    maven { url "http://repo.maven.apache.org/maven2" }
}
dependencies {
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.0.4'
    compile group: 'com.omnitech', name: 'phrase-helper', version: '0.1.0'
    compile group: 'com.opencsv', name: 'opencsv', version: '3.8'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    compile 'de.vandermeer:asciitable:0.2.5'
    testCompile group: 'com.h2database', name: 'h2', version: '1.4.192'
    testCompile group: 'junit', name: 'junit', version: '4.7'
    testCompile group: 'org.bitbucket.mstrobel', name: 'procyon-reflection', version: '0.5.32'
}

afterReleaseBuild.dependsOn uploadArchives

configurations { deployerJars }

dependencies {
    deployerJars 'org.apache.maven.wagon:wagon-ssh:2.12'
}

uploadArchives {
    repositories {
        mavenDeployer {
            configuration = configurations.deployerJars
            String repo = version.endsWith('SNAPSHOT') ? 'scp://omnitech.co.ug/home/maven/m2repo/snapshots' : 'scp://omnitech.co.ug/home/maven/m2repo/releases'
            repository(url: repo) {
                authentication(userName: deployU, password: deployP)
            }
        }
    }
}
